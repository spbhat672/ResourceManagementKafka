@model RM_WithKafka.Models.ResourceWithValue

@{
    ViewBag.Title = "EditResourceDetails";
}

<h2>EditResourceDetails</h2>

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <div>
            @Html.ActionLink("Back to Details", "GetAllResourceDetails")
        </div>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })

        <div class="form-group">
            @Html.LabelFor(model => model.Type, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("DropDownTypeList", (IEnumerable<SelectListItem>)ViewData["TypeList"], new { style = "width: 250px; height:40px" })
                @Html.ValidationMessageFor(model => model.Type, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Status, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("DropDownStatusList", (IEnumerable<SelectListItem>)ViewData["StatusList"], new { style = "width: 250px; height:40px" })
                @Html.ValidationMessageFor(model => model.Status, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="control-label col-md-2" style="font-weight:bold">Location</div>
            <div class="col-md-10">
                <br />
                <div class="col-md-10">X Position</div>
                @Html.EditorFor(model => model.LocationValue.X, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })

                <br />
                <div class="col-md-10">Y Position</div>
                @Html.EditorFor(model => model.LocationValue.Y, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })

                <br />
                <div class="col-md-10">Z Position</div>
                @Html.EditorFor(model => model.LocationValue.Z, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })

                <br />
                <div class="col-md-10">Rotation</div>
                @Html.EditorFor(model => model.LocationValue.Rotation, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Update" class="btn btn-default" />
            </div>
        </div>
    </div>
}
